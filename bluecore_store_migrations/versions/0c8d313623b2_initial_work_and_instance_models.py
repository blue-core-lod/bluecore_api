"""Initial Work and Instance Models

Revision ID: 0c8d313623b2
Revises: 
Create Date: 2024-11-12 13:47:43.328625

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import pgvector
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0c8d313623b2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('instances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uri', sa.String(length=2000), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uri')
    )
    op.create_table('works',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uri', sa.String(length=2000), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uri')
    )
    op.create_table('instance_versions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('user', sa.String(length=256), nullable=False),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('instance_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['instance_id'], ['instances.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('work_versions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('user', sa.String(length=256), nullable=False),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('work_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['work_id'], ['works.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('instance_embeddings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=128), nullable=False),
    sa.Column('instance_version_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['instance_version_id'], ['instance_versions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('work_embeddings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=128), nullable=False),
    sa.Column('work_version_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['work_version_id'], ['work_versions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('work_embeddings')
    op.drop_table('instance_embeddings')
    op.drop_table('work_versions')
    op.drop_table('instance_versions')
    op.drop_table('works')
    op.drop_table('instances')
    # ### end Alembic commands ###
